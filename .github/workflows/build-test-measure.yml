name: Build, test & measure

on:
  push:
    branches:
      - develop
      # Include all release branches.
      - '[0-9]+.[0-9]+'
  pull_request:
    # Run workflow whenever a PR is opened, updated (synchronized), or marked ready for review.
    types: [opened, synchronize, ready_for_review]

jobs:

  unit-test-js:
    name: 'Unit test: JS'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get npm cache directory
        id: npm-cache
        run: echo "::set-output name=dir::$(npm config get cache)"

      - name: Configure npm cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Setup Jest cache
        uses: actions/cache@v2
        with:
          path: ~/.jest-cache
          key: ${{ runner.os }}-jest

      - name: Install Node dependencies
        run: npm ci
        env:
          CI: true

      - name: Run unit tests (with coverage)
        run: |
          npm run test:js -- --ci --cacheDirectory="$HOME/.jest-cache" --collectCoverage
          bash <(curl -s https://codecov.io/bash) -cF javascript -f build/logs/lcov.info

#-----------------------------------------------------------------------------------------------------------------------

  # Adapted from workflow for running PHP unit tests on google/web-stories-wp.
  # See https://github.com/google/web-stories-wp/blob/cb2ebada48039171e25c279bdb27d3712dd70b22/.github/workflows/continuous-integration-unit-php.yml
  unit-test-php:
    name: "Unit test (with coverage): PHP 7.4, WP latest"
    runs-on: ubuntu-latest
    env:
      WP_CORE_DIR: /tmp/wordpress
    services:
      mysql:
        image: mariadb:latest
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_ROOT_PASSWORD:
          MYSQL_DATABASE: wordpress_test
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          extensions: curl, date, dom, gd, iconv, json, libxml, mysql, spl
          coverage: pcov
          ini-values: pcov.directory=.

      - name: Shutdown default MySQL service
        run: sudo service mysql stop

      - name: Verify MariaDB connection
        run: |
          while ! mysqladmin ping -h"127.0.0.1" -P"${{ job.services.mysql.ports[3306] }}" --silent; do
            sleep 1
          done

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Configure Composer cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --prefer-dist --ignore-platform-reqs --no-progress --no-interaction

      - name: Get npm cache directory
        id: npm-cache
        run: echo "::set-output name=dir::$(npm config get cache)"

      - name: Configure npm cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install Node dependencies
        run: npm ci
        env:
          CI: true

      - name: Build plugin
        run: |
          npm run build:js
          npm run build:css

      # Scan the logs for failing tests and surface that information by creating annotations and log file decorations.
      - name: Setup problem matcher to provide annotations for PHPUnit
        # The JSON file is provided by the `shivammathur/setup-php` action. See https://github.com/shivammathur/setup-php#problem-matchers.
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Install WP tests
        run: bash bin/ci/install-wp-tests.sh wordpress_test root '' 127.0.0.1:${{ job.services.mysql.ports['3306'] }} latest true

      - name: Post install of WP tests
        run: bash bin/ci/after-wp-install.sh latest true /tmp/wordpress-tests

      - name: Setup PCOV
        # phpdocumentor/reflection has to be removed as it makes use of an outdated dependency, making pcov/clobber
        # unable to be installed.
        run: |
          composer remove --dev phpdocumentor/reflection
          composer require --dev --ignore-platform-reqs pcov/clobber
          vendor/bin/pcov clobber

      - name: Copy plugin to WP plugins directory
        run: cp -r "$PWD" "$WP_CORE_DIR/src/wp-content/plugins/amp"

      - name: Run tests with coverage
        run: |
          vendor/bin/phpunit --coverage-clover build/logs/clover.xml
          bash <(curl -s https://codecov.io/bash) -cF php -f "$PWD/build/logs/clover.xml"
        working-directory: ${{ env.WP_CORE_DIR }}/src/wp-content/plugins/amp
