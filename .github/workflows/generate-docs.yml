name: Plugin Documentation

on:
  workflow_dispatch:

env:
  BRANCH_NAME: update/docs
  REPO_NAME: ampproject/amp-wp

jobs:
  precheck:
    name: Pre-checks
    runs-on: ubuntu-latest
    steps:
      - name: Detect if PR already exists
        id: detect_pr
        # Fail if the branch exists, otherwise carry on.
        run: gh api --silent -X GET "repos/${{ env.REPO_NAME }}/branches/${{ env.BRANCH_NAME }}" 2> /dev/null && exit 1 || true

  generate_docs:
    name: 'Generate documentation'
    runs-on: ubuntu-latest
    needs: precheck
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Configure Composer cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --prefer-dist --optimize-autoloader --no-progress --no-interaction

      - name: Setup WordPress
        run: |
          docker-compose up -d

          echo "Getting env vars"
          MYSQL_PWD=$(docker-compose exec -T mysql printenv MYSQL_ROOT_PASSWORD)
          WORDPRESS_DB_NAME=$(docker-compose exec -T wordpress printenv WORDPRESS_DB_NAME)
          HOST_PORT=$(docker-compose port wordpress 80 | awk -F : '{printf $2}')

          # Wait until the database container is ready.
          echo -en "Waiting for database connection..."
          until $(docker-compose exec -T wordpress bash -c "echo -n > /dev/tcp/mysql/3306" >/dev/null 2>&1); do
              echo -n '.'
              sleep 5
          done
          echo ''

          echo "Creating db"
          docker-compose exec -T -e MYSQL_PWD="$MYSQL_PWD" mysql mysql -e "CREATE DATABASE IF NOT EXISTS $WORDPRESS_DB_NAME"

          echo "Installing WP"
          docker-compose exec -T cli wp core install --title="Docs" --admin_user=admin --admin_password=password --admin_email=test@test.com --skip-email --url=http://localhost:$HOST_PORT

          echo "Activating AMP plugin"
          touch assets/js/amp-block-editor.js
          docker-compose exec -T cli wp plugin activate amp
        working-directory: bin/local-env

      - name: Generate plugin documentation
        run: docker-compose exec cli wp amp docs generate
        working-directory: bin/local-env

      - name: Detect changes
        id: detect_changes
        run: echo ::set-output name=changed::$([[ -z $(git status --porcelain) ]] && echo 0 || echo 1)

      # Cancel workflow run if there are no updates to docs.
      - name: Cancel workflow run if no updates to documentation
        if: steps.detect_changes.outputs.changed == 1
        run: gh api -X POST "repos/${{ env.REPO_NAME }}/actions/runs/${{ github.run_id }}/cancel"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Commit changes
        run: |
          git checkout -b ${{ env.BRANCH_NAME }}
          git add --all .
          git commit -m "Update documentation - $(date +'%Y-%m-%d')"

      - name: Create pull request
        run: gh pr create --title "Update documentation" --body "" --label Documentation
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
